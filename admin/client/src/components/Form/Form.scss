.form {
  padding-bottom: $spacer-y;
}

.form-group {
  padding-bottom: $spacer-y;

  // Add divider lines
  &::after {
    border-bottom: 1px solid $border-color-light;
    visibility: visible;
    width: 100%;
    margin: $spacer-y 0 #{-$spacer-y};
  }

  .form-group {
    padding-bottom: 0;

    &::after {
      border-bottom: 0;
      visibility: hidden;
    }
  }
}

.form__field-label {
  // If word is to long force break with hyphenation
  @include break-word();
}

.form__field-holder {
  max-width: $input-max-width;
}

.form__field-extra-label,
.form__field-description {
  color: $text-muted;
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0;
  font-size: $font-size-sm;
}


// TODO convert all readonly fields to inputs,
// and remove .form-control-static class from them
.form-control-static {
  padding-left: $input-padding-x;
  padding-right: $input-padding-x;
  background-color: $input-bg-disabled;
  border: 1px solid $input-bg-disabled;
  max-width: $input-max-width;
  @include border-radius($input-border-radius);

  &:focus {
    border-color: $input-border-focus;
    outline: none;
  }
}

// Readonlys should be converted to an input
// scss-lint:disable all
.form__field-holder .readonly,
.readonly .form__field-holder > div {
  @extend .form-control-static;
}
// scss-lint:enable all


// Radio / Checkbox
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  margin-right: 6px;
}


// Grouped/Nested form fields
// Nested as only as a fix for date fields within the filter panel
.form__fieldgroup .form__fieldgroup-item {
  display: inline-block;
  margin-right: $spacer-x / 2;
  vertical-align: bottom; // Align fields with no labels
}

.form__fieldgroup-label {
  display: block;
  font-size: $font-size-sm;
  color: $text-muted;
  margin-top: 8px;
}


@mixin form-responsive($breakpoint-inline, $breakpoint-inline-limit-width, $breakpoint-inline-limit-width-max) {
  @include media-breakpoint-up($breakpoint-inline) {
    .form-group {
      @include make-row();

      &.checkbox .form__field-holder,
      &.nolabel .form__field-holder,
      .form__field-holder--no-label {
        @include make-col-offset(3);
      }

      &::after {
        margin: $spacer-y $grid-gutter-width-half #{-$spacer-y};
      }

      &.treedropdown {
        // scss-lint:disable ImportantRule
        display: flex !important;
        // scss-lint:enable ImportantRule
      }
    }

    .form__field-label {
      @include make-col();
      @include make-col-span(3);
      // Override the `<label>` default with .form-control-label styles
      padding-top: $input-padding-y;
      padding-bottom: $input-padding-y;
      margin-bottom: 0;
      display: block;
    }

    .form__field-holder {
      @include make-col();
      @include make-col-span(9);
    }

    .form__field-extra-label {
      @include make-col();
      @include make-col-span(9);
      @include make-col-offset(3);
    }

    .optionset {
      margin-top: 7px;
    }
  }

  @include media-breakpoint-up($breakpoint-inline-limit-width) {
    .form-group {
      &.checkbox .form__field-holder,
      &.nolabel .form__field-holder,
      .form__field-holder--no-label {
        @include make-col-offset(2);
      }
    }

    .form__field-label {
      @include make-col-span(2);
    }

    .form__field-holder {
      @include make-col-span(8);
    }

    .form__field-extra-label {
      @include make-col-span(2);
      @include make-col-offset(0);
    }
  }

  @include media-breakpoint-up($breakpoint-inline-limit-width-max) {
    .form__field-holder {
      @include make-col-span(7);
    }

    .form__field-extra-label {
      @include make-col-span(3);
      @include make-col-offset(0);
    }
  }
}


// Apply .form--inline to forms to state whether or not the label and input should become inline
// @include form-responsive(turns inline, stops being full width, reduced portion of screen width is used)
.form--inline,
.cms-edit-form {
  @include form-responsive(lg, xl, xxl);
}
